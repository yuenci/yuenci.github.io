{"posts":[{"title":"About","text":"Hi 👋, I'm yuenci A passionate full stack developer from China 👋 Introduction: 🔭 I’m currently working on A note-taking software 🌱 I’m currently learning Algorithms 👨‍💻 All of my projects are to [make the world a better and better.](make the world a better and better.) 📝 I regularly write articles on https://www.enjoycoding.me/ 💬 Ask me about Anything you want to know 📫 How to reach me yuenci1575270674@gmail.com ⚡ Fun fact I often forget to sleep because I am in programming!! 📫 Connect with me: ⚡ Languages and Tools: ❤️ Support:","link":"/2022/12/02/about/"},{"title":"Css Discussion","text":"对于React 中CSS的实施，有很多种方案，比如React 本身支持的 style 1234567const css = { border: &quot;1px solid darkorange&quot;, borderRadius: &quot;10px&quot;,};return ( &lt;button style={css}&gt;&lt;/button&gt;) import 12345import &quot;./style.css&quot;return ( &lt;button className=&quot;btn&quot;&gt;&lt;/button&gt;) CSS in React 的问题1. CSS支持不足 使用style引入的样式，无法支持复杂的嵌套、选择器等特性，使用起来很不方便。 12345678const Widget = () =&gt; { &lt;div style={{ color: 'white', fontSize: '12px' //可以注意到，这里用的并不是css的原生属性，而是react封装过的 }} onClick={() =&gt; doSometing()}&gt; text &lt;/div&gt;} 这就意味着需要使用第三方扩展来解决。 2. 样式污染使用React impoet 进来的的css 在不同级别的导入会导致污染问题 因为 CSS 是全局的，所以它会在整个应用程序的范围内生效。如果在父组件中导入了 CSS 文件，则它将在整个应用程序中生效，包括子组件。 对此出现了两种解决方案： CSS in JS （例如emotionJS 库，styled-components库） https://github.com/emotion-js/emotion https://styled-components.com/ CSS Modules https://github.com/css-modules/css-modules CSS in JS12345678910111213141516171819import { css } from '@emotion/css'const color = 'white'render( &lt;div className={css` padding: 32px; background-color: hotpink; font-size: 24px; border-radius: 4px; &amp;:hover { color: ${color}; } `} &gt; Hover to change color. &lt;/div&gt;) CSS in JS 的好处是： 局部作用：样式只会被局限在组件里，不会影响外部 关注点分离：与组件相关的所有内容都在同一位置 可以在样式中使用JS变量 不过 CSS in JS 也有缺点 增加运行开销，需要把CSS从js取出后再渲染 增加包的大小（EmotionJS 7.9kb） CSS-in-JS 使 React DevTools 混乱 https://dev.to/srmagura/why-were-breaking-up-wiht-css-in-js-4g9b CSS Moduleshttps://www.freecodecamp.org/chinese/news/introduction-to-css-modules-part-one/ https://github.com/css-modules/css-modules https://www.ruanyifeng.com/blog/2016/06/css_modules.html https://css-tricks.com/css-modules-part-1-need/ CSS Modules 是一种用于在 JavaScript 模块中使用本地 CSS 的方法。它允许在模块内定义 CSS 类名，并且可以将这些类名映射到最终应用程序中使用的唯一名称。 这意味着可以在不担心命名冲突的情况下使用简单的、可读的 CSS 类名，而不必使用全局命名空间前缀或自定义哈希字符串来避免命名冲突。 背后的工作原理是构架工具生成的哈希字符串 1234/* App.js */.title { color: red;} 1234567891011// app.jsximport React from 'react';import style from './App.css';export default () =&gt; { return ( &lt;h1 className={style.title}&gt; Hello World &lt;/h1&gt; );}; 上面的内容经过构建工具的构建，将会生成 123._3zyde4l1yATCOkgn-DBWEL { color: red;} 123&lt;h1 class=&quot;_3zyde4l1yATCOkgn-DBWEL&quot;&gt; Hello World&lt;/h1&gt; 这样一来，这个类名就变成独一无二了，只对 App组件有效，不再会造成样式污染。 因为在使用className的时候，已经有一定的关系表达，所以BEM规范不再是必须的 BEM规范BEM（Block-Element-Modifier）是一种用于构建可维护的、可重用的、高内聚的组件的命名方法论。它是由 Yandex 团队创建的，旨在帮助开发人员在编写 CSS 代码时组织命名约定。 BEM 的基本概念是块（Block）、元素（Element）和修饰符（Modifier）。 块（Block）是独立的组件，例如导航栏、按钮或输入框。块通常被表示为一个顶级类，并使用下划线来与其他命名隔离，例如 .navbar。 元素（Element）是块的内部组件，例如导航栏中的菜单项或按钮中的图标。元素通常被表示为块名称加两个下划线的类，例如 .navbar__item。 修饰符（Modifier）是用于修改块或元素的行为或外观的类，例如按钮的大小或颜色。修饰符通常被表示为块或元素名称加两个连字符的类，例如 .btn--large 或 .navbar__item--active。 BEM 的目的是通过组织命名约定来让 CSS 代码更加可维护和可重用。例如，如果使用 BEM 的命名约定，则可以轻松地找到块中的所有元素和修饰符，而且每个元素都有自己的唯一的名称来标定。 https://medium.com/@seanmcp/how-and-when-to-use-bem-in-react-edabad2b805a https://css-tricks.com/bem-101/","link":"/2022/12/31/css-discussion/"},{"title":"Deployed a full-stack appliaction","text":"准备 首先购买服务器 然后SSH 登录服务器 或者 使用在线terminal等方式连接服务器 安装宝塔面板并开放端口 1wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec 安装Nginx 安装Docker 123456789101112131415sudo apt update#更新索引sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common#安装依赖curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -#添加源仓库sudo apt updatesudo apt install docker-ce docker-ce-cli containerd.io#安装最新版本#查看docker状态（正常状态如下图）sudo systemctl status docker 静态资源部分 配置DNS解析 因为更换了服务器， 所以需要更改域名对应的IP 设置 Cloudflare设置为 开发模式 开发者模式不会让用户走缓存获得静态文件，而是直接去源服务器获取，这样用户可以第一时间获得最新的更新 把静态文件放到wwwroot目录下 配置Nginx 首先需要配置SSL 证书以支持Http，其次是配置 /code ,转发请求到84端口，84端口定义了将分发哪些静态文件 1234567891011121314151617181920212223server{ listen 443 ssl; server_name enjoyCoding.com; ssl on; ssl_certificate /usr/local/ssl/ssl_certificate.pem; ssl_certificate_key /usr/local/ssl/ssl_certificate_key.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location /code/{ proxy_pass http://127.0.0.1:84/; }}server{ listen 84; root /www/wwwroot/What-does-this-code-mean; index index.html index.htm;} 后端部分 docker 部署 因为之前已经把镜像上传到了docker hub(wtcm)，所以无需重新制作镜像，直接运行 1$ docker run innis/wtcm:1.0 -p 83:83 不过因为该镜像的API已经过期，所以需要把镜像中的文件拷贝出来重新制作镜像 12$docker cp 266f4:/root/feedback_venv/feedback_venv.zip /Users/Downloads/# docker cp [container_created:path] [dest_path] 镜像构建文件： 1234567891011121314151617FROM python:3.8MAINTAINER Innis&lt;yuenci1575270674@gmail.com&gt;WORKDIR /appRUN pip install flask &amp;&amp; \\ pip install flask_cors &amp;&amp; \\ pip install openai &amp;&amp; \\ pip install gunicorn &amp;&amp; \\ pip install geventCOPY . /appEXPOSE 83# CMD [&quot;python&quot;, &quot;main.py&quot;]ENTRYPOINT [&quot;gunicorn&quot; ,&quot;--config&quot;, &quot;gunicorn.py&quot;, &quot;main:app&quot;] 修改完API Key的配置运行 1$sudo docker build -t wtcm:1.0 . 运行新镜像 1$sudo docker run -it -p 83:83 wtcm:1.0 Nginx 设置 Flask 路由设置 1@app.route('/response', methods=[&quot;POST&quot;]) fetch 设置 12345678910111213url = 'https://enjoycoding.me/api/response' fetch(url, options) .then(data =&gt; { if (!data.ok) { throw Error(data.status); } return data.json(); }).then(update =&gt; { //console.log(update); }).catch(e =&gt; { console.log(e); }); Nginx 设置 123location /api/{ proxy_pass http://0.0.0.0:83/; } CI/CD 部分运行root 登录 步骤 方法 修改 root 密码 执行命令sudo passwd root 输入密码 可以和 ubuntu 密码一致，也可以修改 (密码会让你输入两次) 修改 ssh 配置 执行命令sudo vi /etc/ssh/sshd_config 修 改 PermitRootLogin 进入 ssh 配置界面后找到PermitRootLogin，将它后面改为yes，保存 (按i进入编辑模式，编辑完esc退出，:w保存当前文件，:q退出) 重启 ssh 服务 执行命令 sudo service ssh restart 设置Github actions workflows file 123456789101112131415161718name: scp fileson: [push]jobs: build: name: Build runs-on: ubuntu-latest steps: - uses: actions/checkout@master - name: copy file via ssh password uses: appleboy/scp-action@master with: host: ${{ secrets.HOST }} username: ${{ secrets.USERNAME }} password: ${{ secrets.PASSWORD }} port: 22 source: &quot;./&quot; target: /www/wwwroot/What-does-this-code-mean/ 最后关闭Cloudflare的开发模式","link":"/2022/12/25/deployed-a-full-stack-appliaction/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/12/01/hello-world/"},{"title":"如何让搜索引擎收录网站","text":"1. 如何检查是否收录在搜索栏里搜索：site:www.enjoycoding.me/ Google Baidu （如果静态部署在GitHub Pages，则无法被百度收录的，因为 GitHub 禁止了百度爬虫，需要在国内使用其他的静态部署商来执行部署，比如Coding Pages[^1]） 如果有搜索结果就是有收录，否则则尚无收录。 2. 百度资源平台添加网站需要将静态资源部署在国内，买新的域名，备案，暂时无法实现。 3. 提交谷歌搜索3.1 验证网站域名所有权https://search.google.com/search-console/welcome 如果网站部署了Google analytics ，则可以直接验证成功 如果没有使用，可以用DNS 添加TXT记录的方式验证[^2] 之后就可以进入 Search Console 做进一步的SEO优化操作 [^1]: Hexo 双线部署到 Coding Pages 和 GitHub Pages 并实现全站 HTTPS： https://blog.csdn.net/qq_36759224/article/details/100879609[^2]: Hexo 博客提交百度、谷歌搜索引擎收录： https://zhuanlan.zhihu.com/p/100922816","link":"/2023/02/18/%E5%A6%82%E4%BD%95%E8%AE%A9%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%94%B6%E5%BD%95%E7%BD%91%E7%AB%99/"},{"title":"如何使用 Chrome Devtools","text":"各个Tabs的介绍打开Dev Tool 菜单 - 更多工具 - 开发者工具 快捷键: F12 打开命令菜单快捷键 CTRL + SHIFT + P 使用命令菜单切换为黑暗模式 截图3.dev 停靠位置 常用的Tab Element Console Source Network Application CSS 调试(Element)检查特定元素选中后右键菜单-检查 查询DOM树快捷键： CTRL + F搜索方式： 1. 文本查询 2. css 选择器 3. Xpath 4. inspect(element) 编辑样式1. 给元素添加样式 2. 检查元素的盒子模型 3. 保持 :hover 状态 4. 编辑class属性 5. 复制元素的样式 6. 快速查找样式来源 7. 检查当前页面所有的grib 和flex 布局容器 8. 快捷调试flex / grib 布局 9. 检查元素事件 10. 查看element的所有属性 11. 查看无障碍 Javascript 调试(Console)快捷键 CTRL + SHIFT + J 1. 获取上一个命令的输出 2. 获取刚刚检查过的元素节点 Console1. log, error, warn, clear选择输出级别 2. group 3. time 4. table 5. watch可以实时观测变量的值 Debug1. debugger代码里放置 debugger，运行到对应位置就会停下 2. 断点 3. Dom 断点subtree modifications: 子节点发生修改触发断点attribute modification: 当前节点属性被修改触发断点node removal：当前节点被移除触发断点 4. 事件断点 5. 监视变量 允许折叠代码 Network1. 功能栏介绍 2. 使用 throttling 模拟网络情况 3. 设置请求头部信息 Application","link":"/2023/02/22/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Chrome-Devtools/"}],"tags":[{"name":"tag1","slug":"tag1","link":"/tags/tag1/"},{"name":"Cloud Server","slug":"Cloud-Server","link":"/tags/Cloud-Server/"},{"name":"Ubuntu","slug":"Ubuntu","link":"/tags/Ubuntu/"},{"name":"Nginx","slug":"Nginx","link":"/tags/Nginx/"},{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"DNS","slug":"DNS","link":"/tags/DNS/"},{"name":"Cloudflare","slug":"Cloudflare","link":"/tags/Cloudflare/"},{"name":"CI&#x2F;CD","slug":"CI-CD","link":"/tags/CI-CD/"},{"name":"Github Actions","slug":"Github-Actions","link":"/tags/Github-Actions/"},{"name":"SEO","slug":"SEO","link":"/tags/SEO/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"React","slug":"React","link":"/tags/React/"},{"name":"CSS in JS","slug":"CSS-in-JS","link":"/tags/CSS-in-JS/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"Devtools","slug":"Devtools","link":"/tags/Devtools/"},{"name":"Javascript","slug":"Javascript","link":"/tags/Javascript/"}],"categories":[],"pages":[{"title":"About","text":"Hi 👋, I'm yuenci A passionate full stack developer from China 👋 Introduction: 🔭 I’m currently working on A note-taking software 🌱 I’m currently learning Algorithms 👨‍💻 All of my projects are to [make the world a better and better.](make the world a better and better.) 📝 I regularly write articles on https://www.enjoycoding.me/ 💬 Ask me about Anything you want to know 📫 How to reach me yuenci1575270674@gmail.com ⚡ Fun fact I often forget to sleep because I am in programming!! 📫 Connect with me: ⚡ Languages and Tools: ❤️ Support:","link":"/about/index.html"},{"title":"","text":"/* Submit */ import { writeToDB } from \"./FB_DB.js\"; $(\"#btn\").click(function () { var name = $(\"input[placeholder='name']\").val(); var age = $(\"input[placeholder='age']\").val(); var gender = $(\"input[placeholder='gender']\").val(); var data = { name: name, age: age, gender: gender } console.log(data); writeToDB(data); })","link":"/tutorial/2022-12-30/from.js"},{"title":"","text":"import { initializeApp } from \"https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js\"; import { getFirestore, addDoc, collection } from \"https://www.gstatic.com/firebasejs/9.15.0/firebase-firestore.js\"; const firebaseConfig = { apiKey: \"AIzaSyAfr-AXKIqrQovmlEvH31V1LeOuT4c7QNc\", authDomain: \"nftarts-32191.firebaseapp.com\", projectId: \"nftarts-32191\", storageBucket: \"nftarts-32191.appspot.com\", messagingSenderId: \"865252345043\", appId: \"1:865252345043:web:227e3ff1b632df85328026\", measurementId: \"G-BPLH0BTZ4Z\" }; // Initialize Firebase const app = initializeApp(firebaseConfig); const db = getFirestore(app); export async function writeToDB(data) { let currentAdmin = localStorage.getItem(\"admin\") if (!currentAdmin) currentAdmin = \"Innis\" try { const docRef = await addDoc(collection(db, \"images\"), { ...data, }); console.log(\"Document written with ID: \", docRef.id); } catch (e) { console.error(\"Error adding document: \", e); } } export async function readFromDB() { const querySnapshot = await getDocs(collection(db, \"images\")); querySnapshot.forEach((doc) => { console.log(`${doc.id} => ${doc.data()}`); }); } export async function deleteFromDB(id) { await deleteDoc(doc(db, \"images\", id)); } export async function updateDB(id, data) { await updateDoc(doc(db, \"images\", id), data); }","link":"/tutorial/2022-12-30/FB_DB.js"},{"title":"","text":"Form To DB input { display: block; margin: 10px; } Submit","link":"/tutorial/2022-12-30/form.html"},{"title":"","text":"Import JS 的模块化 Hello world","link":"/tutorial/2022-12-30/index.html"},{"title":"","text":"export let div = document.getElementById('id1');","link":"/tutorial/2022-12-30/js1.js"},{"title":"","text":"export function getTime() { return Date.now().toLocaleString(); }","link":"/tutorial/2022-12-30/js3.js"},{"title":"","text":"import { getTime } from './js3.js'; import { div } from './js1.js'; div.innerHTML = getTime();","link":"/tutorial/2022-12-30/js2.js"},{"title":"","text":"/*! jQuery v1.12.4 | (c) jQuery Foundation | jquery.org/license */ !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m=\"1.12.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return e.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:e.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a){return n.each(this,a)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(e.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:g,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(n.isPlainObject(c)||(b=n.isArray(c)))?(b?(b=!1,f=a&&n.isArray(a)?a:[]):f=a&&n.isPlainObject(a)?a:{},g[d]=n.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray||function(a){return\"array\"===n.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){var b=a&&a.toString();return!n.isArray(a)&&b-parseFloat(b)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||\"object\"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;try{if(a.constructor&&!k.call(a,\"constructor\")&&!k.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}if(!l.ownFirst)for(b in a)return k.call(a,b);for(b in a);return void 0===b||k.call(a,b)},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?i[j.call(a)]||\"object\":typeof a},globalEval:function(b){b&&n.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(s(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):g.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(h)return h.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,g=0,h=[];if(s(a))for(d=a.length;d>g;g++)e=b(a[g],g,c),null!=e&&h.push(e);else for(g in a)e=b(a[g],g,c),null!=e&&h.push(e);return f.apply([],h)},guid:1,proxy:function(a,b){var c,d,f;return\"string\"==typeof b&&(f=a[b],b=a,a=f),n.isFunction(a)?(c=e.call(arguments,2),d=function(){return a.apply(b||this,c.concat(e.call(arguments)))},d.guid=a.guid=a.guid||n.guid++,d):void 0},now:function(){return+new Date},support:l}),\"function\"==typeof Symbol&&(n.fn[Symbol.iterator]=c[Symbol.iterator]),n.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){i[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ga(),z=ga(),A=ga(),B=function(a,b){return a===b&&(l=!0),0},C=1","link":"/tutorial/2022-12-30/jquery-1.12.4.min.js"}]}