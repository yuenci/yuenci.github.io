{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/12/01/hello-world/"},{"title":"About","text":"Hi 👋, I'm yuenci A passionate full stack developer from China 👋 Introduction: 🔭 I’m currently working on A note-taking software 🌱 I’m currently learning Algorithms 👨‍💻 All of my projects are to [make the world a better and better.](make the world a better and better.) 📝 I regularly write articles on https://www.enjoycoding.me/ 💬 Ask me about Anything you want to know 📫 How to reach me yuenci1575270674@gmail.com ⚡ Fun fact I often forget to sleep because I am in programming!! 📫 Connect with me: ⚡ Languages and Tools: ❤️ Support:","link":"/2022/12/02/about/"},{"title":"Deployed a full-stack appliaction","text":"准备 首先购买服务器 然后SSH 登录服务器 或者 使用在线terminal等方式连接服务器 安装宝塔面板并开放端口 1wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec 安装Nginx 安装Docker 123456789101112131415sudo apt update#更新索引sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common#安装依赖curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -#添加源仓库sudo apt updatesudo apt install docker-ce docker-ce-cli containerd.io#安装最新版本#查看docker状态（正常状态如下图）sudo systemctl status docker 静态资源部分 配置DNS解析 因为更换了服务器， 所以需要更改域名对应的IP 设置 Cloudflare设置为 开发模式 开发者模式不会让用户走缓存获得静态文件，而是直接去源服务器获取，这样用户可以第一时间获得最新的更新 把静态文件放到wwwroot目录下 配置Nginx 首先需要配置SSL 证书以支持Http，其次是配置 /code ,转发请求到84端口，84端口定义了将分发哪些静态文件 1234567891011121314151617181920212223server{ listen 443 ssl; server_name enjoyCoding.com; ssl on; ssl_certificate /usr/local/ssl/ssl_certificate.pem; ssl_certificate_key /usr/local/ssl/ssl_certificate_key.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location /code/{ proxy_pass http://127.0.0.1:84/; }}server{ listen 84; root /www/wwwroot/What-does-this-code-mean; index index.html index.htm;} 后端部分 docker 部署 因为之前已经把镜像上传到了docker hub(wtcm)，所以无需重新制作镜像，直接运行 1$ docker run innis/wtcm:1.0 -p 83:83 不过因为该镜像的API已经过期，所以需要把镜像中的文件拷贝出来重新制作镜像 12$docker cp 266f4:/root/feedback_venv/feedback_venv.zip /Users/Downloads/# docker cp [container_created:path] [dest_path] 镜像构建文件： 1234567891011121314151617FROM python:3.8MAINTAINER Innis&lt;yuenci1575270674@gmail.com&gt;WORKDIR /appRUN pip install flask &amp;&amp; \\ pip install flask_cors &amp;&amp; \\ pip install openai &amp;&amp; \\ pip install gunicorn &amp;&amp; \\ pip install geventCOPY . /appEXPOSE 83# CMD [&quot;python&quot;, &quot;main.py&quot;]ENTRYPOINT [&quot;gunicorn&quot; ,&quot;--config&quot;, &quot;gunicorn.py&quot;, &quot;main:app&quot;] 修改完API Key的配置运行 1$sudo docker build -t wtcm:1.0 . 运行新镜像 1$sudo docker run -it -p 83:83 wtcm:1.0 Nginx 设置 Flask 路由设置 1@app.route('/response', methods=[&quot;POST&quot;]) fetch 设置 12345678910111213url = 'https://enjoycoding.me/api/response' fetch(url, options) .then(data =&gt; { if (!data.ok) { throw Error(data.status); } return data.json(); }).then(update =&gt; { //console.log(update); }).catch(e =&gt; { console.log(e); }); Nginx 设置 123location /api/{ proxy_pass http://0.0.0.0:83/; } CI/CD 部分运行root 登录 步骤 方法 修改 root 密码 执行命令sudo passwd root 输入密码 可以和 ubuntu 密码一致，也可以修改 (密码会让你输入两次) 修改 ssh 配置 执行命令sudo vi /etc/ssh/sshd_config 修 改 PermitRootLogin 进入 ssh 配置界面后找到PermitRootLogin，将它后面改为yes，保存 (按i进入编辑模式，编辑完esc退出，:w保存当前文件，:q退出) 重启 ssh 服务 执行命令sudo service ssh restart 设置Github actions workflows file 123456789101112131415161718name: scp fileson: [push]jobs: build: name: Build runs-on: ubuntu-latest steps: - uses: actions/checkout@master - name: copy file via ssh password uses: appleboy/scp-action@master with: host: ${{ secrets.HOST }} username: ${{ secrets.USERNAME }} password: ${{ secrets.PASSWORD }} port: 22 source: &quot;./&quot; target: /www/wwwroot/What-does-this-code-mean/","link":"/2022/12/25/deployed-a-full-stack-appliaction/"}],"tags":[{"name":"tag1","slug":"tag1","link":"/tags/tag1/"},{"name":"Cloud Server","slug":"Cloud-Server","link":"/tags/Cloud-Server/"},{"name":"Ubuntu","slug":"Ubuntu","link":"/tags/Ubuntu/"},{"name":"Nginx","slug":"Nginx","link":"/tags/Nginx/"},{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"DNS","slug":"DNS","link":"/tags/DNS/"},{"name":"Cloudflare","slug":"Cloudflare","link":"/tags/Cloudflare/"},{"name":"CI&#x2F;CD","slug":"CI-CD","link":"/tags/CI-CD/"},{"name":"Github Actions","slug":"Github-Actions","link":"/tags/Github-Actions/"}],"categories":[],"pages":[{"title":"About","text":"Hi 👋, I'm yuenci A passionate full stack developer from China 👋 Introduction: 🔭 I’m currently working on A note-taking software 🌱 I’m currently learning Algorithms 👨‍💻 All of my projects are to [make the world a better and better.](make the world a better and better.) 📝 I regularly write articles on https://www.enjoycoding.me/ 💬 Ask me about Anything you want to know 📫 How to reach me yuenci1575270674@gmail.com ⚡ Fun fact I often forget to sleep because I am in programming!! 📫 Connect with me: ⚡ Languages and Tools: ❤️ Support:","link":"/about/index.html"}]}